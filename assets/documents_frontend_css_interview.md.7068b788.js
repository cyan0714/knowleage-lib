import{_ as i,o as e,c as o,Q as l}from"./chunks/framework.8801f029.js";const y=JSON.parse('{"title":"CSS 面试题","description":"","frontmatter":{},"headers":[],"relativePath":"documents/frontend/css/interview.md","filePath":"documents/frontend/css/interview.md","lastUpdated":1708651539000}'),n={name:"documents/frontend/css/interview.md"},d=l('<h1 id="css-面试题" tabindex="-1">CSS 面试题 <a class="header-anchor" href="#css-面试题" aria-label="Permalink to &quot;CSS 面试题&quot;">​</a></h1><h2 id="_1-display-none、visibility-hidden、opacity-0-的区别" tabindex="-1">1. display:none、visibility:hidden、opacity:0 的区别 <a class="header-anchor" href="#_1-display-none、visibility-hidden、opacity-0-的区别" aria-label="Permalink to &quot;1. display:none、visibility:hidden、opacity:0 的区别&quot;">​</a></h2><h3 id="相同点" tabindex="-1">相同点 <a class="header-anchor" href="#相同点" aria-label="Permalink to &quot;相同点&quot;">​</a></h3><p>都能使元素隐藏</p><h3 id="不同点" tabindex="-1">不同点 <a class="header-anchor" href="#不同点" aria-label="Permalink to &quot;不同点&quot;">​</a></h3><ol><li>是否占据空间 <code>display:none</code> 否 <code>visibility:hidden</code> 是 <code>opacity:0</code> 是</li><li>子元素是否继承 <code>display:none</code> 否 <code>visibility:hidden</code> 会被子元素继承，但是可以给子元素单独设置<code>visibility:visible</code>来显示子元素 <code>opacity:0</code> 会被子元素继承，但是不能设置子元素<code>opacity:1</code>来显示子元素</li><li>事件绑定 <code>display:none</code> 否 <code>visibility:hidden</code> 否 <code>opacity:0</code> 是</li><li>过渡动画 <code>display:none</code> 否 <code>visibility:hidden</code> 否 <code>opacity:0</code> 是</li><li>是否会产生回流和重绘 <code>display:none</code> 会产生回流和重绘 <code>visibility:hidden</code> 只会引起页面重绘 <code>opacity:0</code> 只会引起页面重绘</li></ol><h2 id="_2-inline-block-and-inline-block-的区别" tabindex="-1">2. inline, block, and inline-block 的区别? <a class="header-anchor" href="#_2-inline-block-and-inline-block-的区别" aria-label="Permalink to &quot;2. inline, block, and inline-block 的区别?&quot;">​</a></h2><ol><li><p><strong>Inline元素</strong>：</p><ul><li>默认情况下，内联元素不会导致换行，它们会在同一行内显示。</li><li>内联元素的宽度和高度由其内容决定，无法设置固定的宽度和高度。</li><li>内联元素只能容纳文本或其他内联元素，不能容纳块级元素。</li></ul></li><li><p><strong>Block元素</strong>：</p><ul><li>块级元素会导致换行，每个块级元素都会从新的一行开始。</li><li>块级元素的宽度默认为100%，可以设置固定的宽度和高度。</li><li>块级元素可以容纳内联元素和其他块级元素。</li></ul></li><li><p><strong>Inline-block元素</strong>：</p><ul><li>内联块级元素结合了内联元素和块级元素的特性，可以在同一行内显示，并且可以设置宽度和高度。</li><li>内联块级元素可以容纳其他内联元素和块级元素，类似于块级元素的行为。</li></ul></li></ol>',8),a=[d];function c(t,s,r,h,p,_){return e(),o("div",null,a)}const u=i(n,[["render",c]]);export{y as __pageData,u as default};
